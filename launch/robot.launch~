<launch>
	
	
	<!-- PARAMETRES -->
	

    <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find betsy_setup)/urdf/diff_wheeled_robot_new_model.xacro'" /> 
    
    <param name="robot_description" command="$(arg urdf_file)" />
	
	
	
	
	
	<!-- EXECUTION NODES -->
	
	
	<node name="laser_scan" pkg="urg_node" type="urg_node">
        <param name="~ip_address" type="string" value="192.168.0.10" />
		
    </node>
    

    
    <node name="Arduino1" pkg="rosserial_python" type="serial_node.py">
        <param name="port" value="/dev/ttyACM0"/>
    </node>
    
    <node name="Arduino2" pkg="rosserial_python" type="serial_node.py">
        <param name="port" value="/dev/ttyACM1"/>
    </node>
    
    
    
  
    

    <node pkg="betsy_setup" type="twist_to_motors.py" name="twist_to_motors" output="screen"/>
    
      <node name="lpid_velocity" pkg="betsy_setup" type="pid_velocity.py" output="screen">
      <remap from="wheel" to="lwheel"/>
      <remap from="motor_cmd" to="left_wheel_speed"/>
      <remap from="wheel_vtarget" to="lwheel_vtarget"/>
      <remap from="wheel_vel" to="lwheel_vel"/>
      <rosparam param="Kp">400</rosparam>
      <rosparam param="Ki">100</rosparam>
      <rosparam param="Kd">0</rosparam>
      <rosparam param="out_min">-1023</rosparam>
      <rosparam param="out_max">1023</rosparam>
      <rosparam param="rate">30</rosparam>
      <rosparam param="timeout_ticks">4</rosparam>
      <rosparam param="rolling_pts">5</rosparam>
  </node>

  <node name="rpid_velocity" pkg="betsy_setup" type="pid_velocity.py" output="screen">
      <remap from="wheel" to="rwheel"/>
      <remap from="motor_cmd" to="right_wheel_speed"/>
      <remap from="wheel_vtarget" to="rwheel_vtarget"/>
      <remap from="wheel_vel" to="rwheel_vel"/>
      <rosparam param="Kp">400</rosparam>
      <rosparam param="Ki">100</rosparam>
      <rosparam param="Kd">0</rosparam>
      <rosparam param="out_min">-1023</rosparam>
      <rosparam param="out_max">1023</rosparam>
      <rosparam param="rate">30</rosparam>
      <rosparam param="timeout_ticks">4</rosparam>
      <rosparam param="rolling_pts">5</rosparam>
    </node>
    
    
    
    
    
    <!-- SIMULATION GAZEBO -->
    
    
      <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- urdf xml robot description loaded on the Parameter Server-->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find betsy_setup)/urdf/diff_wheeled_robot_new_model.xacro'" /> 
 
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 
  <!-- start robot state publisher -->
  <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher" output="screen" >
    <param name="publish_frequency" type="double" value="50.0" />
  </node>


  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model diff_wheeled_robot -param robot_description"/> 



    
    
    
    
</launch>

